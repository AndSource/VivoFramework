package com.suntek.rcs.ui.common.provider;

import com.suntek.mway.rcs.client.aidl.common.RcsColumns.GroupStatusColumns;
import com.suntek.mway.rcs.client.aidl.common.RcsColumns.SmsRcsColumns;
import com.suntek.mway.rcs.client.aidl.constant.Constants.MessageProvider.Message;

public class RcsMessageProviderConstants {
    public static final String BLOCKED_CALLOG_CLOUMNS = "select  _id as BLACKLIST_CALL_ID, contact as BLACKLIST_PHONE_NUMBER, name as BLACKLIST_NAME from blockrecorditems where block_type = 0";
    private static final String[] EMPTY_STRING_ARRAY = new String[0];
    public static final String FILE_TRANSFER_MESSAGE_VIEW_CLOUMN = "select sms.date as TIMESTAMP,sms.address as CONTACT_NUMBER,sms.rcs_file_transfer_id as FT_ID,sms.rcs_file_name as FILENAME,sms.rcs_thumb_path as FILEICON,sms.rcs_file_size as FILE_SIZE,sms.rcs_file_transfered as TRANSFERRED,sms.rcs_mime_type as TYPE,(CASE WHEN sms.type = 1 THEN 0 ELSE 1 END) as DIRECTION,(CASE WHEN type = 2 AND rcs_msg_state = 64 THEN 2 WHEN type = 2 AND rcs_msg_state = 32 OR rcs_msg_state = -1 THEN 3 WHEN (type = 2 OR type = 5) AND rcs_msg_state = 128 THEN 5 WHEN type = 1 AND (rcs_msg_type = 1 OR rcs_msg_type = 3 ) AND rcs_file_transfered = 0  THEN 0 WHEN type = 1 AND (rcs_msg_type = 1 OR rcs_msg_type = 3 ) AND rcs_file_transfered = rcs_file_size THEN 3 WHEN type = 1 AND (rcs_msg_type = 1 OR rcs_msg_type = 3 ) AND (rcs_file_transfered < rcs_file_size AND rcs_file_transfered > 0 ) THEN 2 WHEN type = 1 AND (rcs_msg_type <> 1 AND rcs_msg_type <> 3 ) THEN 3 ELSE 0 END) as STATE from sms WHERE sms.rcs_file_transfer_id >= 0 ";
    private static final String FILE_TRANSFER_STATE = "(CASE WHEN type = 2 AND rcs_msg_state = 64 THEN 2 WHEN type = 2 AND rcs_msg_state = 32 OR rcs_msg_state = -1 THEN 3 WHEN (type = 2 OR type = 5) AND rcs_msg_state = 128 THEN 5 WHEN type = 1 AND (rcs_msg_type = 1 OR rcs_msg_type = 3 ) AND rcs_file_transfered = 0  THEN 0 WHEN type = 1 AND (rcs_msg_type = 1 OR rcs_msg_type = 3 ) AND rcs_file_transfered = rcs_file_size THEN 3 WHEN type = 1 AND (rcs_msg_type = 1 OR rcs_msg_type = 3 ) AND (rcs_file_transfered < rcs_file_size AND rcs_file_transfered > 0 ) THEN 2 WHEN type = 1 AND (rcs_msg_type <> 1 AND rcs_msg_type <> 3 ) THEN 3 ELSE 0 END)";
    private static final String[] ID_PROJECTION = new String[]{GroupStatusColumns._ID};
    public static final String MESSAGES_VIEW_CLOUMN = "select sms._id as CHATMESSAGE_MESSAGE_ID,(CASE WHEN sms.rcs_chat_type = 3 THEN (select a.address from sms a where a.thread_id = sms.thread_id AND a.rcs_msg_type = 7) ELSE NULL END)  as CHATMESSAGE_CHAT_ID,sms.date as CHATMESSAGE_TIMESTAMP,sms.thread_id as CHATMESSAGE_CONVERSATION,sms.rcs_chat_type as CHATMESSAGE_FLAG, 0  as CHATMESSAGE_ISBLOCKED,(CASE WHEN sms.type = 1 THEN 0 ELSE 1 END) as CHATMESSAGE_DIRECTION,(CASE WHEN sms.rcs_chat_type = 3 THEN  (select a.address from sms a where a._id = sms._id AND a.rcs_msg_type <> 7 )  ELSE sms.address END)  as CHATMESSAGE_CONTACT_NUMBER,(CASE WHEN sms.rcs_file_transfer_id >= 0 THEN sms.rcs_file_transfer_id ELSE (CASE WHEN sms.rcs_message_id  is not null THEN sms.body ELSE NULL END)END) as CHATMESSAGE_BODY,(CASE WHEN sms.rcs_file_transfer_id >= 0 THEN 5 ELSE 3 END) as CHATMESSAGE_TYPE, (CASE WHEN sms.type = 1 AND sms.read = 0 THEN 0 ELSE (CASE WHEN sms.type = 1 AND sms.read = 1 THEN 2 ELSE (CASE WHEN sms.rcs_message_id is null AND sms.type = 6 THEN 3 WHEN sms.rcs_message_id is null AND sms.type = 2 THEN 4 WHEN sms.rcs_message_id is null AND sms.type = 5 THEN 5 ELSE (CASE WHEN sms.rcs_message_id is not null AND sms.rcs_msg_state = 64 THEN 3 WHEN sms.rcs_message_id is not null AND sms.rcs_msg_state = 32 THEN 4 WHEN sms.rcs_message_id is not null AND sms.rcs_msg_state = 128 THEN 5 WHEN sms.rcs_message_id is not null AND sms.rcs_msg_state = -1 THEN 7 ELSE 6 END)END)END)END) as CHATMESSAGE_MESSAGE_STATUS from sms WHERE sms.rcs_chat_type in (1,2,3) and sms.rcs_msg_type <> 7";
    public static final String MESSAGE_CONVERSATION_VIEW_CLOUMNS = "select threads.snippet as CHATMESSAGE_BODY,threads.date as CHATMESSAGE_TIMESTAMP,threads.message_count as CHATMESSAGE_MESSAGE_COUNT,(select COUNT(*) FROM (select sms.read FROM sms inner join threads on sms.thread_id = threads._id WHERE sms.read = 0  UNION ALL SELECT pdu.read FROM pdu inner join threads on pdu.thread_id = threads._id WHERE pdu.read = 0)) as CHATMESSAGE_UNREAD_COUNT,threads.msg_chat_type as CHATMESSAGE_FLAG,(CASE WHEN threads.msg_chat_type = 4 then NULL ELSE threads._id END ) as CHATMESSAGE_CONVERSATION_ID,(CASE WHEN threads.msg_chat_type = 3 THEN (select sms.address from sms where threads._id = sms.thread_id AND sms.rcs_chat_type = 3 AND sms.rcs_msg_type = 7) ELSE sms.address END) as CHATMESSAGE_RECIPIENTS,(CASE WHEN sms.rcs_file_transfer_id >= 0 AND threads.last_msg_id=sms._id THEN 5 ELSE (CASE WHEN threads.msg_chat_type = 4 THEN 4 ELSE (CASE WHEN threads.msg_chat_type = 1 OR threads.msg_chat_type = 2 OR threads.msg_chat_type = 3 THEN 3 ELSE 0 END)END)END) as CHATMESSAGE_TYPE,(CASE WHEN sms.rcs_file_transfer_id >= 0 AND threads.last_msg_id=sms._id THEN sms.rcs_mime_type ELSE NULL END) as CHATMESSAGE_MIME_TYPE from threads inner join sms on threads.last_msg_id = sms._id and sms.rcs_msg_type <> 7";
    private static final String[] MMS_ONLY_COLUMNS = new String[]{"ct_cls", "ct_l", "ct_t", "d_rpt", "exp", "m_cls", "m_id", "m_size", "m_type", "msg_box", "pri", "read_status", "resp_st", "resp_txt", "retr_st", "retr_txt_cs", "rpt_a", "rr", "st", "sub", "sub_cs", "tr_id", "v", "text_only"};
    private static final String MMS_PROJECTION = "'mms' AS transport_type, pdu._id, thread_id,addr.address AS address, part.text as body, phone_id,NULL AS rcs_file_path,NULL AS rcs_thumb_path,NULL AS rcs_msg_type,NULL AS rcs_burn,NULL AS rcs_is_download,NULL AS rcs_msg_state, NULL AS rcs_mime_type, NULL AS favourite,NULL AS rcs_file_size,NULL AS rcs_message_id,NULL AS rcs_chat_type,pdu.date * 1000 AS date, date_sent, read, NULL AS type,NULL AS status, locked, NULL AS error_code,sub, sub_cs, date, date_sent, read,m_type,pdu.msg_box AS msg_box,d_rpt, rr, NULL AS err_type,locked, NULL AS st, NULL AS text_only,phone_id, NULL AS recipient_ids";
    private static final String MMS_PROJECTION_FOR_NUMBER_SEARCH = "'mms' AS transport_type, pdu._id, thread_id,addr.address AS address, NULL AS body, phone_id,NULL AS rcs_file_path,NULL AS rcs_thumb_path,NULL AS rcs_msg_type,NULL AS rcs_burn,NULL AS rcs_is_download,NULL AS rcs_msg_state, NULL AS rcs_mime_type, NULL AS favourite,NULL AS rcs_file_size,NULL AS rcs_message_id,NULL AS rcs_chat_type,pdu.date * 1000 AS date, date_sent, read, NULL AS type,NULL AS status, locked, NULL AS error_code,sub, sub_cs, date, date_sent, read,m_type,pdu.msg_box AS msg_box,d_rpt, rr, NULL AS err_type,locked, NULL AS st, NULL AS text_only,phone_id, NULL AS recipient_ids";
    private static final String MMS_PROJECTION_FOR_SUBJECT_SEARCH = "'mms' AS transport_type, pdu._id, thread_id,addr.address AS address, pdu.sub as body, phone_id,NULL AS rcs_file_path,NULL AS rcs_thumb_path,NULL AS rcs_msg_type,NULL AS rcs_burn,NULL AS rcs_is_download,NULL AS rcs_msg_state, NULL AS rcs_mime_type, NULL AS favourite,NULL AS rcs_file_size,NULL AS rcs_message_id,NULL AS rcs_chat_type,pdu.date * 1000 AS date, date_sent, read, NULL AS type,NULL AS status, locked, NULL AS error_code,sub, sub_cs, date, date_sent, read,m_type,pdu.msg_box AS msg_box,d_rpt, rr, NULL AS err_type,locked, NULL AS st, NULL AS text_only,phone_id, NULL AS recipient_ids";
    private static final String[] MMS_SMS_COLUMNS = new String[]{GroupStatusColumns._ID, "date", "date_sent", "read", "thread_id", "locked", "sub_id"};
    public static final String PUBLIC_ACCOUNT_MESSAGES_VIEW_CLOUMN = "select sms.address as PUBLICACCOUNTSERVICE_ACCOUNT,sms.body as PUBLICACCOUNTSERVICE_BODY,sms.date as PUBLICACCOUNTSERVICE_TIMESTAMP,(CASE WHEN sms.type = 1 THEN 0 ELSE 1 END) as PUBLICACCOUNTSERVICE_DIRECTION,sms.rcs_mime_type as PUBLICACCOUNTSERVICE_MIME_TYPE,(CASE WHEN sms.rcs_file_transfer_id >= 0 THEN 5 ELSE 4 END) as PUBLICACCOUNTSERVICE_TYPE, (CASE WHEN sms.type = 1 AND sms.read = 0 THEN 0 ELSE (CASE WHEN sms.type = 1 AND sms.read = 1 THEN 2 ELSE (CASE WHEN sms.rcs_message_id is null AND sms.type = 6 THEN 3 WHEN sms.rcs_message_id is null AND sms.type = 2 THEN 4 WHEN sms.rcs_message_id is null AND sms.type = 5 THEN 5 ELSE (CASE WHEN sms.rcs_message_id is not null AND sms.rcs_msg_state = 64 THEN 3 WHEN sms.rcs_message_id is not null AND sms.rcs_msg_state = 32 THEN 4 WHEN sms.rcs_message_id is not null AND sms.rcs_msg_state = 128 THEN 5 WHEN sms.rcs_message_id is not null AND sms.rcs_msg_state = -1 THEN 7 ELSE 6 END)END)END)END) as PUBLICACCOUNTSERVICE_MESSAGE_STATUS,(CASE WHEN sms.rcs_file_transfer_id >= 0 THEN sms.rcs_file_transfer_id ELSE sms._id END) as PUBLICACCOUNTSERVICE_MESSAGE_ID from sms WHERE sms.rcs_chat_type = 4";
    public static final String[] RCS_ICC_COLUMNS = new String[]{"service_center_address", Message.NUMBER, "message_class", "body", "date", "status", "index_on_icc", "is_status_report", "transport_type", "type", "locked", "error_code", GroupStatusColumns._ID, "sub_id", "rcs_file_name", "rcs_thumb_path", "rcs_msg_type", "rcs_burn", SmsRcsColumns.RCS_MSG_STATE, "rcs_is_download", "rcs_mime_type", "favourite", "rcs_file_size", "rcs_message_id", "rcs_chat_type"};
    private static final String RCS_OTHER_PROJECTION = "NULL AS rcs_file_path,NULL AS rcs_thumb_path,NULL AS rcs_msg_type,NULL AS rcs_burn,NULL AS rcs_is_download,NULL AS rcs_msg_state, NULL AS rcs_mime_type, NULL AS favourite,NULL AS rcs_file_size,NULL AS rcs_message_id,NULL AS rcs_chat_type,";
    public static final String[] RCS_SMS_ONLY_COLUMNS = new String[]{Message.NUMBER, "body", "person", "reply_path_present", "service_center", "status", "subject", "type", "error_code", "priority", "rcs_file_name", "rcs_thumb_path", "rcs_mime_type", "rcs_msg_type", "rcs_chat_type", "favourite", SmsRcsColumns.RCS_MSG_STATE, "rcs_burn", "rcs_is_download", "rcs_file_size", SmsRcsColumns.RCS_BURN_BODY, "rcs_message_id", SmsRcsColumns.RCS_MEDIA_PLAYED, SmsRcsColumns.RCS_EXT_CONTACT, "rcs_file_record"};
    private static final String RCS_SMS_PROJECTION = "rcs_file_path,rcs_thumb_path,rcs_msg_type, rcs_burn,rcs_is_download,rcs_msg_state,rcs_mime_type,favourite,rcs_file_size,rcs_message_id,rcs_chat_type,";
    private static final String[] SEARCH_STRING = new String[1];
    public static final String SMS_DELETE_DUPLICATE_RECORD_BEFORE_INSERT = "when new.type= 1 and new.rcs_message_id!= -1 and new.rcs_message_id IS NOT NULL  BEGIN  select raise(rollback,'')  where (select _id from sms where rcs_message_id = new.rcs_message_id and type= 1 and sub_id = new.sub_id) is not null; END;";
    private static final String SMS_PROJECTION = "'sms' AS transport_type, _id, thread_id,address, body, phone_id,rcs_file_path,rcs_thumb_path,rcs_msg_type, rcs_burn,rcs_is_download,rcs_msg_state,rcs_mime_type,favourite,rcs_file_size,rcs_message_id,rcs_chat_type,date, date_sent, read, type,status, locked, NULL AS error_code,NULL AS sub, NULL AS sub_cs, date, date_sent, read,NULL as m_type,NULL AS msg_box,NULL AS d_rpt, NULL AS rr, NULL AS err_type,locked, NULL AS st, NULL AS text_only,phone_id, NULL AS recipient_ids";
    public static final String SMS_UPDATE_THREAD_DATE_SNIPPET_COUNT_ON_UPDATE = "BEGIN  UPDATE threads SET    date = (strftime('%s','now') * 1000),     snippet = new.body,     snippet_cs = 0  WHERE threads._id = new.thread_id;   UPDATE threads SET message_count =      (SELECT COUNT(sms._id) FROM sms LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = new.thread_id        AND sms.type != 3) +      (SELECT COUNT(pdu._id) FROM pdu LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = new.thread_id        AND (m_type=132 OR m_type=130 OR m_type=128)        AND msg_box != 3)   WHERE threads._id = new.thread_id;   UPDATE threads SET read =     CASE (SELECT COUNT(*)          FROM sms          WHERE read = 0            AND thread_id = threads._id)      WHEN 0 THEN 1      ELSE 0    END  WHERE threads._id = new.thread_id; END;";
    public static final String SMS_UPDATE_THREAD_RCS_MESSAGE_INFO_ON_NEW = "BEGIN   UPDATE threads SET msg_chat_type =     (CASE WHEN msg_chat_type != -1     THEN msg_chat_type WHEN msg_chat_type= -1 AND new.rcs_chat_type!= -1 THEN new.rcs_chat_type ELSE msg_chat_type END),rcs_number =     (CASE WHEN new.rcs_chat_type= 1    or new.rcs_chat_type = 2    or new.rcs_chat_type= 4     THEN new.address ELSE rcs_number    END)     WHERE threads._id = new.thread_id    AND new.rcs_msg_type != -1;   UPDATE threads SET last_msg_id =     new._id,last_msg_type    = new.rcs_msg_type    WHERE threads . _id = new . thread_id; END;";
    public static final String SMS_UPDATE_THREAD_READ_BODY = "  UPDATE threads SET read =     CASE (SELECT COUNT(*)          FROM sms          WHERE read = 0            AND thread_id = threads._id)      WHEN 0 THEN 1      ELSE 0    END  WHERE threads._id = new.thread_id; ";
    public static final String TABLE_GROUP_STATUS = "group_status";
    private static final String TABLE_PDU = "pdu";
    public static final String TABLE_SMS = "sms";
    public static final String TABLE_THREADS = "threads";
    private static final String[] UNION_COLUMNS = new String[((MMS_SMS_COLUMNS.length + MMS_ONLY_COLUMNS.length) + RCS_SMS_ONLY_COLUMNS.length)];
    public static final String UPDATE_THREAD_COUNT_ON_NEW = "  UPDATE threads SET message_count =      (SELECT COUNT(sms._id) FROM sms LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = new.thread_id        AND sms.type != 3) +      (SELECT COUNT(pdu._id) FROM pdu LEFT JOIN threads       ON threads._id = thread_id      WHERE thread_id = new.thread_id        AND (m_type=132 OR m_type=130 OR m_type=128)        AND msg_box != 3)   WHERE threads._id = new.thread_id; ";
    public static final boolean isRcs = true;

    public interface DeviceApiViews {
        public static final String BLOCKED_CALLLOGS = "blocked_callog_view";
        public static final String DEVICE_API_MESSAGES = "device_api_messages";
        public static final String FILE_TRANSFER_MESSAGE = "file_transfer_message";
        public static final String MESSAGE_CONVERSATION = "message_conversation";
        public static final String PUBLIC_ACCOUNT_MESSAGES = "public_account_messages";
    }
}
